 ------
 "Qulice" Profile for Static Quality Control
 ------
 Yegor Bugayenko
 ------
 2012-12-10
 ------

~~
~~ Copyright (c) 2012, jcabi.com
~~ All rights reserved.
~~
~~ Redistribution and use in source and binary forms, with or without
~~ modification, are permitted provided that the following conditions
~~ are met: 1) Redistributions of source code must retain the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer. 2) Redistributions in binary form must reproduce the above
~~ copyright notice, this list of conditions and the following
~~ disclaimer in the documentation and/or other materials provided
~~ with the distribution. 3) Neither the name of the jcabi.com nor
~~ the names of its contributors may be used to endorse or promote
~~ products derived from this software without specific prior written
~~ permission.
~~
~~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
~~ "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
~~ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
~~ FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
~~ THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
~~ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
~~ (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
~~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
~~ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
~~ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
~~ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
~~ OF THE POSSIBILITY OF SUCH DAMAGE.
~~

"Qulice" Profile for Static Quality Control

  Profile <<<qulice>>> can be activated only manually from
  command line, e.g.:

+--
$ mvn clean install -Pqulice
+--

  It runs a number of checks to make sure the quality of
  the build is acceptable. These plugins are used at the moment
  to control quality and prevent errors:

   * {{{http://www.qulice.com/qulice-maven-plugin/}<<<qulice-maven-plugin>>>}}
     is a compound static analysis plugin, that pre-configures and executes
     Checkstyle, PMD, FindBugs, CodeNarc (for Groovy code) and a few other
     plugins in one bucket. That's why the name of the profile, since this
     is the biggest tool being executed. It is expected by default that
     your <<<LICENSE.txt>>> is located in a root directory of every module.

   * {{{https://github.com/ning/maven-duplicate-finder-plugin}<<<maven-duplicate-finder-plugin>>>}}
     is a filter of duplicate classes and resources in classpath. It is a very
     useful tool to catch overriding dependencies and exclude them earlier.

   * {{{http://maven.apache.org/plugins/maven-dependency-plugin/analyze-only-mojo.html}<<<maven-dependency-plugin>>>}}
     with its <<<analyze-only>>> goal helps to identify dependencies that
     are not used, or the ones that are used but not defined.

   * {{{http://mojo.codehaus.org/xml-maven-plugin/}<<<xml-maven-plugin>>>}}
     is a validator of XML files for "well formedness".

   * {{{http://maven.apache.org/plugins/maven-docck-plugin/index.html}<<<maven-docck-plugin>>>}}
     checks the quality of Maven project documentation.

  All plugins are bound to the <<<verify>>> Maven phase. All executions
  are named <<<jcabi-check>>>.

